services:

  zookeeper:
    restart: always
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  kafka:
    restart: always
    image: confluentinc/cp-enterprise-kafka:latest
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.100.5:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy

  postgres:
    image: postgres:latest
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -Ukafka_demo -d kafka_demo" ]
      interval: 5s
      timeout: 1s
      retries: 100
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kafka_demo
      - POSTGRES_PASSWORD=kafka_demo
      - POSTGRES_DB=kafka_demo
    volumes:
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: "postgres -c config_file=/etc/postgresql/postgresql.conf"
